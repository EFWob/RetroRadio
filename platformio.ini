; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html
;
;
; STACK ISSUE (solved by hardcoded increase of Stack size):
; https://community.platformio.org/t/esp32-stack-configuration-reloaded/20994
[env]

platform = espressif32@3.3
framework = arduino
board_build.partitions = default.csv
board_build.filesystem = littlefs
build_flags =
   -DMQTT_MAX_PACKET_SIZE=1024
monitor_speed = 115200
lib_deps = 
	Wire
	SD(esp32) @^1.0.5
	knolleary/PubSubClient@^2.8
	adafruit/Adafruit ST7735 and ST7789 Library@^1.6.0
	adafruit/Adafruit BusIO@^1.7.1
	adafruit/Adafruit GFX Library@^1.10.4
	djuseeq/Ch376msc @ ^1.4.4
	agdl/Base64 @ ^1.0.0
	lorol/LittleFS_esp32
	bblanchon/ArduinoJson
	https://github.com/pschatzmann/ESP32-A2DP

[env:plain devkit]
board = esp32doit-devkit-v1

[env:4MB devkit]
;see https://github.com/espressif/esptool/wiki/espefuse
;GPIO 12 must not be evaluated at boot, set fuse for SPI-Flash to 3V3
;espefuse.py --port /dev/DONOTDOTHIS set_flash_voltage 3.3V
board = esp32doit-devkit-v1
build_flags =
	-D DEVKIT4MB
	-D NO_RESET_ON_WIFI_FAIL
	-DLOG_LOCAL_LEVEL=0 
	-DCORE_DEBUG_LEVEL=0
board_build.partitions = radio4MB_default.csv

[env:esp32-poe]
board = esp32-poe
board_build.partitions = radio4MB_default.csv
build_flags = 
	-DNAME=testradio

[env:esp32-poe-BT]
board = esp32-poe
board_build.partitions = radio4MB_bigApp.csv
build_flags = 
	-DNAME=testradioBT
;	-D BLUETOOTH

[env:esp32-poe WiFi only]
board = esp32-poe
board_build.partitions = radio4MB_default.csv
build_flags = 
	-DNAME=testradio
	-DETHERNET=0

[env:esp32-poe WiFi only bigApp]
board = esp32-poe
board_build.partitions = radio4MB_bigApp.csv
build_flags = 
	-DNAME=testradio
	-DETHERNET=0

[env:esp32-poe OTA]
board = esp32-poe
upload_protocol = espota
upload_port = 192.168.194.133
board_build.partitions = radio4MB_default.csv
board_build.filesystem = littlefs
build_flags = 
	-DNAME=testradio
	-DCONFIG_FREERTOS_USE_TRACE_FACILITY
	-DconfigUSE_TRACE_FACILITY=1
	-DLOOPTASKSTACK=10000

[env:esp32doit-devkit]
board = esp32doit-devkit-v1

[env:Badradio]
board = esp32-poe
upload_protocol = espota
upload_port = 192.168.194.17
build_flags =
	-D NOSERIAL
	-D BADRADIO
board_build.partitions = radio4MB_default.csv


[env:Badradio Debug USB]
board_build.partitions = radio4MB_default.csv
board = esp32-poe
build_flags =
	-D BADRADIO


[env:badradio old]
board = esp32doit-devkit-v1
build_flags =
	-D BADRADIO

[env:badradio OTA]
board = esp32doit-devkit-v1
build_flags =
	-D BADRADIO
upload_protocol = espota
upload_port = 192.168.194.139

[env:Odroid]
board=odroid_esp32board_build.partitions = radio4MB_default.csv
board_build.partitions = radio_partition16MB.csv

[env:16 MB devkit]
;see https://github.com/espressif/esptool/wiki/espefuse
;GPIO 12 must not be evaluated at boot, set fuse for SPI-Flash to 3V3
;espefuse.py --port /dev/DONOTDOTHIS set_flash_voltage 3.3V
board = esp32doit-devkit-v1
build_flags =
	-D OMARADIO
	-D NO_RESET_ON_WIFI_FAIL
	-DCORE_DEBUG_LEVEL=5
board_build.partitions = radio_partition16MB.csv

[env:16 MB devkit PSRAM]
;see https://github.com/espressif/esptool/wiki/espefuse
;GPIO 12 must not be evaluated at boot, set fuse for SPI-Flash to 3V3
;espefuse.py --port /dev/DONOTDOTHIS set_flash_voltage 3.3V
board = esp32doit-devkit-v1
build_flags =
	-D OMARADIO
	-D NO_RESET_ON_WIFI_FAIL
	-DBOARD_HAS_PSRAM -mfix-esp32-psram-cache-issue 
	-DLOG_LOCAL_LEVEL=ESP_LOG_DEBUG 
	-DCORE_DEBUG_LEVEL=ARDUHAL_LOG_LEVEL_DEBUG
board_build.partitions = radio_partition16MB.csv

[env:oma]
; !!!!OLD!!!!
;see https://github.com/espressif/esptool/wiki/espefuse
;GPIO 12 must not be evaluated at boot, set fuse for SPI-Flash to 3V3
;espefuse.py --port /dev/DONOTDOTHIS set_flash_voltage 3.3V
;board = esp32doit-devkit-v1
;build_flags =
;	-D OMARADIO
;	-D NO_RESET_ON_WIFI_FAIL

; !!!!NEW!!!!
;no official board definition for T8
board=ttgo-t1
build_flags =
	-D ARDUINO_TTGO_T8
	-DBOARD_HAS_PSRAM 
	-D OMARADIO
	-D NO_RESET_ON_WIFI_FAIL
board_build.partitions = radio4MB_default.csv	

[env:oma OTA] 
board = esp32doit-devkit-v1
build_flags =
	-D OMARADIO
	-D NOSERIAL
	-D RESET_ON_WIFI_FAIL
upload_protocol = espota
upload_port = 192.168.194.32

[env:opa OTA] 
board = esp32doit-devkit-v1
;build_flags =
;	-D RESET_ON_WIFI_FAIL
upload_protocol = espota
upload_port = 192.168.194.97
board_build.partitions = radio4MB_default.csv	

[env:opa] 
board = esp32doit-devkit-v1
;build_flags =
;	-D RESET_ON_WIFI_FAIL
upload_protocol = espota
upload_port = 192.168.194.97
board_build.partitions = radio4MB_default.csv	


[env:lolin32]
board=lolin32
build_flags =
	-D ARDUINO_WEMOS_LOLIN32
board_build.partitions = radio4MB_default.csv

[env:lolin32 16MB]
board=lolin32
build_flags =
	-D ARDUINO_WEMOS_LOLIN32
board_build.partitions = radio16MB.csv

[env:TTGO-T8]
;no official board definition for T8
board=ttgo-t1
build_flags =
	-D ARDUINO_TTGO_T8
	-DBOARD_HAS_PSRAM -mfix-esp32-psram-cache-issue 
board_build.partitions = radio4MB_default.csv

[env:TTGO-T8 16MB]
;no official board definition for T8
board=ttgo-t1
build_flags =
	-D ARDUINO_TTGO_T8
	-DBOARD_HAS_PSRAM -mfix-esp32-psram-cache-issue 
board_build.partitions = radio16MB.csv

[env: Boombox1 OTA]
;no official board definition for T8
board=ttgo-t1
build_flags =
	-D ARDUINO_TTGO_T8
	-D BOOMBOX
	-D NOSERIAL
	-DBOARD_HAS_PSRAM -mfix-esp32-psram-cache-issue 
board_build.partitions = radio16MB.csv
upload_protocol = espota
upload_port = 192.168.194.73
